#!/usr/bin/env sh

PPT_SETTINGS_FILENAME=".ppt_settings.defaults"
PPT_GLOBAL_SETTINGS_DEFAULTS="${HOME}/${PPT_SETTINGS_FILENAME}"
PPT_SETTINGS_DEFAULTS="${LIB_DIR}/${PPT_SETTINGS_FILENAME}"

_PPT_SETTINGS_DIR=".settings";
_PPT_RESULTS_DIR=".results";
_PPT_TEMPLATES_DIR=".templates";
__GITHUB_DIR=".github";
_PPT_GITHUB_DIR="${_PPT_RESULTS_DIR}/${__GITHUB_DIR}";
_SRC_DIR="src/PACKAGE_NSPACE"
_TESTS_DIR="tests/Unit"

_SETTINGS_FILE="settings.env"
_ENV_FILE=".env"
_GITIGNORE_FILE=".gitignore"
_GITATTRIBUTES_FILE=".gitattributes"
_COMPOSER_JSON="composer.json"
_CHANGELOG_MD="CHANGELOG.md"
_README_MD="README.md"
_ISSUE_TEMPLATE_MD="ISSUE_TEMPLATE.md"
_TODO_MD="TODO.md"
_TITLE_FILE="TERMINAL_TITLE"
_LICENSE_FILE="LICENSE"
_BASIC_CLASS_PHP="BasicClass.php"
_BASIC_TEST_PHP="BasicTest.php"

_TEMPLATE="template."

PPT_SETTINGS_STORAGE="${_PPT_SETTINGS_DIR}/${_SETTINGS_FILE}"

PPT_GITIGNORE_TEMPLATE="${_PPT_TEMPLATES_DIR}/${_TEMPLATE}${_GITIGNORE_FILE}"
PPT_GITATTRIBUTES_TEMPLATE="${_PPT_TEMPLATES_DIR}/${_TEMPLATE}${_GITATTRIBUTES_FILE}"
PPT_COMPOSER_JSON_TEMPLATE="${_PPT_TEMPLATES_DIR}/${_TEMPLATE}${_COMPOSER_JSON}"
PPT_CHANGELOG_MD_TEMPLATE="${_PPT_TEMPLATES_DIR}/${_TEMPLATE}${_CHANGELOG_MD}"
PPT_README_MD_TEMPLATE="${_PPT_TEMPLATES_DIR}/${_TEMPLATE}${_README_MD}"
PPT_ISSUE_TEMPLATE_MD_TEMPLATE="${_PPT_TEMPLATES_DIR}/${_TEMPLATE}${_ISSUE_TEMPLATE_MD}"
PPT_TODO_MD_TEMPLATE="${_PPT_TEMPLATES_DIR}/${_TEMPLATE}${_TODO_MD}"
PPT_TITLE_TEMPLATE="${_PPT_TEMPLATES_DIR}/${_TEMPLATE}${_TITLE_FILE}"
PPT_LICENSE_TEMPLATE="${_PPT_TEMPLATES_DIR}/${_TEMPLATE}${_LICENSE_FILE}"
PPT_BASIC_CLASS_PHP_TEMPLATE="${_PPT_TEMPLATES_DIR}/${_TEMPLATE}${_BASIC_CLASS_PHP}"
PPT_BASIC_TEST_PHP_TEMPLATE="${_PPT_TEMPLATES_DIR}/${_TEMPLATE}${_BASIC_TEST_PHP}"

PPT_ENV_FILE="${_PPT_RESULTS_DIR}/${_ENV_FILE}"
PPT_GITIGNORE_FILE="${_PPT_RESULTS_DIR}/${_GITIGNORE_FILE}"
PPT_GITATTRIBUTES_FILE="${_PPT_RESULTS_DIR}/${_GITATTRIBUTES_FILE}"
PPT_COMPOSER_JSON_FILE="${_PPT_RESULTS_DIR}/${_COMPOSER_JSON}"
PPT_CHANGELOG_MD_FILE="${_PPT_RESULTS_DIR}/${_CHANGELOG_MD}"
PPT_README_MD_FILE="${_PPT_RESULTS_DIR}/${_README_MD}"
PPT_ISSUE_TEMPLATE_MD_FILE="${_PPT_GITHUB_DIR}/${_ISSUE_TEMPLATE_MD}"
PPT_TODO_FILE="${_PPT_RESULTS_DIR}/${_TODO_MD}"
PPT_TITLE_FILE="${_PPT_RESULTS_DIR}/${_TITLE_FILE}"
PPT_LICENSE_FILE="${_PPT_RESULTS_DIR}/${_LICENSE_FILE}"
PPT_BASIC_CLASS_PHP_FILE="${_PPT_RESULTS_DIR}/${_SRC_DIR}/${_BASIC_CLASS_PHP}"
PPT_BASIC_TEST_PHP_FILE="${_PPT_RESULTS_DIR}/${_TESTS_DIR}/${_BASIC_TEST_PHP}"


_ppt_declare_variables_defaults() {
    # Variables defaults
    _ppt_continue_setup=${PPT_FALSE}
    _ppt_silent_setup=${_ppt_silent_setup:=${PPT_FALSE}}
    display_attention_message=${PPT_FALSE}
    _ppt_do_add_origin=${PPT_FALSE}
    _ppt_vcs_service="github"
    # Arguments defaults
    _ppt_param_package_name=""
    _ppt_param_owner=""
    _ppt_param_owner_name=""

    # Settings defaults
    _ppt_package_owner="mike-wazowski"
    _ppt_package_owner_name="Mike Wazowski"
    _ppt_package_name="new-package"
    _ppt_package_description="Awesome description"
    _ppt_package_namespace="NewPackage"
    _ppt_package_owner_namespace=""
    _ppt_package_dir="php-new-package"

    # Values
    _ppt_current_dir="$(basename $(pwd))"

    _ppt_load_defaults

    _ppt_reassign_variables_with_args "$@"
    _ppt_package_namespace=$(_ppt_prepare_package_namespace "${_ppt_package_name}")
}

_ppt_load_defaults_files () {
    _ppt_load_defaults_file ${PPT_GLOBAL_SETTINGS_DEFAULTS} ||
    _ppt_load_defaults_file ${PPT_SETTINGS_DEFAULTS}
}

_ppt_load_defaults_file () {
    _ppt_debug "Searching settings: '${1}'"
    if [ -e ${1} ]
    then
        . ${1}
        _ppt_debug "Using settings file '${1}'"
        return ${PPT_TRUE}
    fi
    _ppt_debug "Settings not found: '${1}'"

    return ${PPT_FALSE}
}

_ppt_load_defaults () {
    _ppt_load_defaults_files

    _ppt_debug "PPT_PACKAGE_OWNER: ${PPT_PACKAGE_OWNER}"
    _ppt_debug "PPT_PACKAGE_OWNER_NAME: ${PPT_PACKAGE_OWNER_NAME}"
    _ppt_debug "PPT_PACKAGE_NAME: ${PPT_PACKAGE_NAME}"
    _ppt_debug "PPT_PACKAGE_DESCRIPTION: ${PPT_PACKAGE_DESCRIPTION}"
    _ppt_debug "PPT_PACKAGE_NAMESPACE: ${PPT_PACKAGE_NAMESPACE}"
    _ppt_debug "PPT_PACKAGE_OWNER_NAMESPACE: ${PPT_PACKAGE_OWNER_NAMESPACE}"
    _ppt_debug "PPT_PACKAGE_DIR: ${PPT_PACKAGE_DIR}"

    # Settings defaults
    _ppt_package_owner=${PPT_PACKAGE_OWNER:-$_ppt_package_owner}
    _ppt_package_owner_name=${PPT_PACKAGE_OWNER_NAME:-$_ppt_package_owner_name}
    _ppt_package_name=${PPT_PACKAGE_NAME:-$_ppt_package_name}
    _ppt_package_description=${PPT_PACKAGE_DESCRIPTION:-$_ppt_package_description}
    _ppt_package_namespace=${PPT_PACKAGE_NAMESPACE:-$_ppt_package_namespace}
    _ppt_package_owner_namespace=${PPT_PACKAGE_OWNER_NAMESPACE:-$_ppt_package_owner_namespace}
    _ppt_package_dir=${PPT_PACKAGE_DIR:-$_ppt_package_dir}

    unset PPT_PACKAGE_OWNER PPT_PACKAGE_OWNER_NAME PPT_PACKAGE_NAME PPT_PACKAGE_DESCRIPTION PPT_PACKAGE_NAMESPACE PPT_PACKAGE_OWNER_NAMESPACE PPT_PACKAGE_DIR
}

_ppt_reassign_variables_with_args () {
    ### Read positional arguments
    _ppt_param_package_name="${1:-}"
    _ppt_param_owner="${2:-}"
    _ppt_param_owner_name="${3:-}"
    _ppt_param_owner_namespace="${4:-}"
    if [ ! -z "${_ppt_param_owner}" ]
    then
        _ppt_package_owner=${_ppt_param_owner}
    fi
    if [ ! -z "${_ppt_param_package_name}" ]
    then
        _ppt_package_name=${_ppt_param_package_name}
    fi
    if [ ! -z "${_ppt_param_owner_name}" ]
    then
        _ppt_package_owner_name=${_ppt_param_owner_name}
    fi
    if [ ! -z "${_ppt_param_owner_namespace}" ]
    then
        _ppt_package_owner_namespace=${_ppt_param_owner_namespace}
    fi
    _ppt_refine_package_name
    _ppt_refine_package_owner

    _ppt_prepare_package_dir

    unset _ppt_param_package_name _ppt_param_owner _ppt_param_owner_name _ppt_param_owner_namespace
 }
_ppt_color_cyan () {
   echo "${__ppt_ansi_cyan}${1}${__ppt_ansi_none}"
}
_ppt_color_bold_cyan () {
   echo "${__ppt_ansi_bold_cyan}${1}${__ppt_ansi_none}"
}
_ppt_show_values () {
    __separator=""
    if [ ! ${_ppt_package_owner_namespace} = "" ]
    then
        __separator='\\'
    fi
    _ppt_print "Name: $(_ppt_color_bold_cyan "${_ppt_package_owner_name}")"
    _ppt_print "Package: $(_ppt_color_bold_cyan "${_ppt_package_owner}/${_ppt_package_name}")"
    _ppt_print "Description: $(_ppt_color_bold_cyan "${_ppt_package_description}")"
    _ppt_print "Namespace: $(_ppt_color_bold_cyan "${_ppt_package_owner_namespace}${__separator}${_ppt_package_namespace}")"
    _ppt_print "Directory: $(_ppt_color_bold_cyan "${_ppt_package_dir}")"
    unset __separator
}

_ppt_echo_variables () {
    echo "param__ppt_package_name: '${_ppt_param_package_name}'"
    echo "param_owner: '${_ppt_param_owner}'"
    echo "param_owner_name: '${_ppt_param_owner_name}'"
    echo "_ppt_continue_setup: '${_ppt_continue_setup}'"
    echo "_ppt_silent_setup: '${_ppt_silent_setup}'"
    echo "display_attention_message: '${display_attention_message}'"
    echo "_ppt_do_add_origin: '${_ppt_do_add_origin}'"
    echo "_ppt_vcs_service: '${_ppt_vcs_service}'"
    echo "current_dir: '${current_dir}'"
}

_ppt_show_messages () {
    if _ppt_has_docker
    then
        _ppt_info "🐳 docker installed"
    else
        _ppt_error "docker not installed"
    fi

    if _ppt_has_docker_compose
    then
        _ppt_info "🐳 docker-compose installed"
    else
        _ppt_error "docker-compose not installed"
    fi

#    _ppt_print "${_ppt_package_owner_name} -> $(_ppt_capitalize_every_word "${_ppt_package_owner_name}")"

#    _ppt_show_values

    _ppt_dark "dark sample message"
    _ppt_notice "notice sample message"
    _ppt_comment "comment sample message"
    _ppt_info "info sample message"
    _ppt_warn "warning sample message"
    _ppt_error "error sample message"


    ### Fatal message and exit!
    _ppt_fatal "fatal sample message"
}

_ppt_read_options () {
    __ppt_param1=""
    __ppt_param2=""
    __ppt_param3=""
    __ppt_param4=""
    __ppt_param5=${PPT_FALSE}
#    _ppt_silent_setup=${PPT_FALSE}
    ### Read options
    while getopts "yp:o:n:s:xh" OPTION; do
            case ${OPTION} in
                    y)
                        _ppt_silent_setup=${PPT_TRUE}
                        _ppt_debug "Option '-y': no confirmation needed [${PPT_TRUE}]"
                        ;;
                    p)
                        __ppt_param1="${OPTARG:-}"
                        _ppt_debug "Option '-p': package name set [${__ppt_param1}]"
                        ;;
                    o)
                        __ppt_param2="${OPTARG:-}"
                        _ppt_debug "Option '-o': package owner set [${__ppt_param2}]"
                        ;;
                    n)
                        __ppt_param3="${OPTARG:-}"
                        _ppt_debug "Option '-n': package owner name set [${__ppt_param3}]"
                        ;;
                    s)
                        __ppt_param4="${OPTARG:-}"
                        _ppt_debug "Option '-s': package owner namespace set [${__ppt_param4}]"
                        ;;
                    x)
                        __ppt_param5=${PPT_TRUE}
                        _ppt_debug "Option '-x': do not use package owner namespace"
                        ;;
                    h)
                        _ppt_debug "Option '-h': show help message"
                        _ppt_help_message
                        ;;

            esac
    done
}

