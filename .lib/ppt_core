#!/usr/bin/env sh
### Define constants
PPT_TRUE=0
PPT_FALSE=1
PPT_ERROR=2
### COLORS
# Black        0;30     Dark Gray     1;30
# Red          0;31     Light Red     1;31
# Green        0;32     Light Green   1;32
# Brown/Orange 0;33     Yellow        1;33
# Blue         0;34     Light Blue    1;34
# Purple       0;35     Light Purple  1;35
# Cyan         0;36     Light Cyan    1;36
# Light Gray   0;37     White         1;37

### Color Constants
__PPT_ANSI_DARK='\033[2m'

__PPT_ANSI_NONE='\033[0m'
__PPT_ANSI_RED='\033[1;31m'
__PPT_ANSI_GREEN='\033[1;32m'
__PPT_ANSI_YELLOW='\033[1;33m'
__PPT_ANSI_CYAN='\033[1;36m'

### Define
__ppt_reset_colors () {
    __ppt_ansi_none=''
    __ppt_ansi_dark=''
    __ppt_ansi_red=''
    __ppt_ansi_green=''
    __ppt_ansi_yellow=''
    __ppt_ansi_cyan=''
}
__ppt_set_colors () {
    __ppt_ansi_none=${__PPT_ANSI_NONE}
    __ppt_ansi_dark=${__PPT_ANSI_DARK}
    __ppt_ansi_red=${__PPT_ANSI_RED}
    __ppt_ansi_green=${__PPT_ANSI_GREEN}
    __ppt_ansi_yellow=${__PPT_ANSI_YELLOW}
    __ppt_ansi_cyan=${__PPT_ANSI_CYAN}
}
### Set defaults
__ppt_reset_colors

### Logging functions.
_ppt_warn() {
  echo "${__ppt_ansi_yellow}ppt:WARN${__ppt_ansi_none} $*" >&2
}
_ppt_error() {
  echo "${__ppt_ansi_red}ppt:ERROR${__ppt_ansi_none} $*" >&2
}
_ppt_fatal() {
  echo "${__ppt_ansi_red}ppt:FATAL${__ppt_ansi_none} $*" >&2
  exit ${PPT_ERROR}
}
### Messages functions
_ppt_dark() {
  echo "${__ppt_ansi_dark}$*${__ppt_ansi_none}" >&2
}
_ppt_info() {
  echo "${__ppt_ansi_green}$*${__ppt_ansi_none}" >&2
}
_ppt_comment() {
  echo "${__ppt_ansi_yellow}$*${__ppt_ansi_none}" >&2
}


_ppt_configureColor() {
  _ppt_color_=${PPT_FALSE}  # By default, no color.
  case $1 in
    'always') _ppt_color_=${PPT_TRUE} ;;
    'auto')
      ( exec tput >/dev/null 2>&1 )  # Check for existence of tput command.
      if [ $? -lt 127 ]; then
        _ppt_tput_=`tput colors`
        # shellcheck disable=SC2166,SC2181
        [ $? -eq 0 -a "${_ppt_tput_}" -ge 16 ] && _ppt_color_=${PPT_TRUE}
      fi
      ;;
    'none') ;;
    *) _ppt_fatal "unrecognized color option '${1}'" ;;
  esac

  case ${_ppt_color_} in
    ${PPT_TRUE})
      __ppt_set_colors
      ;;
    ${PPT_FALSE})
      __ppt_reset_colors
      ;;
  esac

  unset _ppt_color_ _ppt_tput_
}

_ppt_check_user () {
    if [ $(whoami) = "root" ]
    then
        _ppt_fatal "DO NOT run this script under root!"
    fi
}

_ppt_set_terminal_title () {
    echo "\033]0;${1}\007"
}


_ppt_check_if_dir_exists  () {
    __DIRECTORY=$(_ppt_realpath "${1}")
    if [ -d "${__DIRECTORY}" ]; then
        if [ ! -L "${__DIRECTORY}" ]; then
            unset __DIRECTORY
            return ${PPT_TRUE}
        fi
    fi
    unset __DIRECTORY
    return ${PPT_FALSE}
}

_ppt_settings_dir_is_consistent () {
    FILES=""
    FILES="${FILES} ${COMPOSER_JSON}"
    FILES="${FILES} ${CHANGELOG_MD}"
    FILES="${FILES} ${README_MD}"
    for FILE in ${FILES}; do
        if [ ! -e "${_PPT_SETTINGS_DIR}/${FILE}" ]
        then
            _ppt_dark "Not found: ${_PPT_SETTINGS_DIR}/${FILE}"
            return ${PPT_FALSE}
        fi
    done
    return ${PPT_TRUE}
}