#!/usr/bin/env bash
cd bin
. imports.sh "$@"
cd ..

green "This script will make setup"
composer_json_file="composer.json.result";
if [[ -e "${composer_json_file}" ]]
then
    yellow "Found '${composer_json_file}' file:"
    cat "${composer_json_file}"
else
    package_owner="dralec"
    package_name="moomba"
    package_description="PHP Library"

    # Ask owner
    read -e -p "Enter package owner [${package_owner}]: " input
    package_owner="${input:-$package_owner}"
    # Ask name
    read -e -p "Enter package name  [${package_name}]: " input
    package_name="${input:-$package_name}"
    # Ask description
    read -e -p "Enter package description  [${package_description}]: " input
    package_description="${input:-$package_description}"
    # Ask namespace
    package_namespace="${package_name^}"
    read -e -p "Enter package namespace [${package_namespace}]: " input
    package_namespace="${input:-$package_namespace}"
    # Ask dir
    package_dir="${package_name}"
    read -e -p "Enter package dir [${package_dir}]: " input
    package_dir="${input:-$package_dir}"

    echo "Creating php package: ${package_owner}/${package_name}"
    echo "ðŸ“¦ ${package_owner}/${package_name}" > TERMINAL_TITLE
    echo "Description: ${package_description}"
    echo "Namespace: ${package_namespace}"
    sed "s/PACKAGE_OWNER/${package_owner}/g; s/PACKAGE_NAME/${package_name}/g; s/PACKAGE_DESCRIPTION/${package_description}/g; s/PACKAGE_NSPACE/${package_namespace}/g;" composer.json.template | tee "${composer_json_file}"
fi

read -i "y" -p "Continue? " -n 1 -r
echo
if [[ $REPLY =~ ^[Yy]$ ]]
then

    user=$(whoami)
    u_id="$(id -u ${user})"
    g_id="$(id -g ${user})"
    if [[ -e "${ENV_FILE}" ]]
    then
        echo "Removing .env file"
        rm .env
    fi
    echo "Creating .env file"
    touch .env
    echo "USER_ID=${u_id}" >> .env
    echo "GROUP_ID=${u_id}" >> .env
    if [[ -e ".gitattributes.dist" ]]
    then
        echo "Creating .gitattributes file"
        mv .gitattributes.dist .gitattributes
    else
        if [[ -e ".gitattributes" ]]
        then
            echo ".gitattributes file already exists"
        else
            echo ".gitattributes file not found"
        fi
    fi
    mv "${composer_json_file}" composer.json
    rm -rf "src"
    mkdir -p "src/$package_namespace"
    mkdir -p "tests/Feature"
    mkdir -p "tests/Unit"
    sed "s/PACKAGE_NSPACE/${package_namespace}/g;" BasicClass.php.template | tee "src/$package_namespace/BasicClass.php"
    rm  "tests/BasicTest.php"
    sed "s/PACKAGE_NSPACE/${package_namespace}/g;" BasicTest.php.template | tee "tests/BasicTest.php"
    rm composer.lock
    rm composer.json.example
    rm .env.dist
    rm *.template

    dark "Deleting old repository"
    rm -rf .git/
    dark "Deleting setup script"
    rm setup

    info "Stopping container if started"
    docker-compose down
    info "Starting container"
    docker-compose up -d
    info "Installing dependencies"
    docker-compose exec app composer install
else
    echo "Skip setup"
    echo
fi
